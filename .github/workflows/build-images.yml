name: "schedule check and build"
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test the image build'
  schedule:
    - cron: "30 5 3,18 * *"
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_PLATFORMS: linux/amd64

jobs:
#  setup-matrix:
#    runs-on: ubuntu-latest
#    outputs:
#      dockerfiles: ${{ steps.files.outputs.value }}
#    steps:
#      - uses: actions/checkout@v4
#      - id: files
#        working-directory: ./
#        run: |
#          echo "value=$(ls -p | grep dockerfile | sed 's/dockerfile-//g' | grep -v / | jq -R | jq -s -c)" >> "$GITHUB_OUTPUT"

  first:
    runs-on: ubuntu-latest
#    needs: [setup-matrix]
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    strategy:
      max-parallel: 1
      continue-on-error: true
      matrix:
#        work_name: ${{ fromJSON(needs.setup-matrix.outputs.dockerfiles) }}
#        work_name: [winbox, ubuntu-desktop]
        work_name: [winbox]
        version: [1.16.1, 1.17.0]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set ENV variables
        run: |
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
#          echo "VERSION=1.16.1" >> $GITHUB_ENV
      - name: echo VARs
        run: |
          echo ${{matrix.work_name}}
          echo ${{env.COMMIT_HASH}}
          echo ${{matrix.version}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=network_default
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build on pull request
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v6
        with:
          push: false
          platforms: ${{ env.BUILD_PLATFORMS }}
          context: .
          file: dockerfile-${{matrix.work_name}}
          secrets: |
            "GIT_AUTH_TOKEN=${{ secrets.RUNNER_GITEA_TOKEN }}"
            "GIT_USER=${{ secrets.RUNNER_GITEA_USER }}"
          build-args: |
            BASE_TAG=${{matrix.version}}-rolling-weekly
            BASE_IMAGE=core-ubuntu-noble
            TZ=Europe/Berlin
            LANG=de_DE.UTF-8
            LANGUAGE=de_DE:de
            LC_ALL=de_DE.UTF-8
      - name: Build and push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: ${{ env.BUILD_PLATFORMS }}
          tags: |
            dersni/kasm-images:${{matrix.work_name}}-${{matrix.version}}
            dersni/kasm-images:${{matrix.work_name}}-${{matrix.version}}.${{ github.run_number }}
            dersni/kasm-images:${{matrix.work_name}}-${{matrix.version}}.${{ github.run_number }}-${{ env.COMMIT_HASH }}
            ${{ matrix.version == '1.17.0' && format('{0}:{1}-latest', 'dersni/kasm-images', matrix.work_name) || null}}
          build-args: |
            BASE_TAG=${{matrix.version}}-rolling-weekly
            BASE_IMAGE=core-ubuntu-noble
            TZ=Europe/Berlin
            LANG=de_DE.UTF-8
            LANGUAGE=de_DE:de
            LC_ALL=de_DE.UTF-8
          context: .
          file: dockerfile-${{matrix.work_name}}
#      - name: Docker Hub Description
#        if: github.event_name != 'pull_request'
#        uses: peter-evans/dockerhub-description@v4
#        with:
#          username: ${{ secrets.DOCKERHUB_USER }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#          repository: dersni/kasm-images
#          readme-filepath: README.md